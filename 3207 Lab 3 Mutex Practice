#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>
#define THREAD_NUM 4
#define LOOPS 1000000

int sum = 0;
pthread_mutex_t mutex;

void *thread (void* vargp);

int main()
{
    pthread_mutex_init(&mutex, NULL);
    
    pthread_t tid[THREAD_NUM];
    
    for (int i = 0; i < THREAD_NUM; i++) {
        int* num = malloc(sizeof(int));
        *num = i;
        pthread_create(&tid[i], NULL, thread, num);
    }
    
    for (int i = 0; i < THREAD_NUM; i++) {
        pthread_join(tid[i], NULL);
    }
    
    printf("Hello World\n");
    printf("sum: %d\n", sum);

    return 0;
}

void *thread (void* vargp) {
    
    for (int i = 0; i < LOOPS; i++) {
        pthread_mutex_lock(&mutex);
        sum++;
        pthread_mutex_unlock(&mutex);
    }
    
    int num = *(int*) vargp;
    printf("This comes from thread %d!\n", num);
    free(vargp);
    
}
